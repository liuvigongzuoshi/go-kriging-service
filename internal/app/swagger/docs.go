// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package swagger

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/ordinary/grid": {
            "post": {
                "tags": [
                    "普通克力金"
                ],
                "summary": "查询插值生成的网格数据",
                "parameters": [
                    {
                        "description": "请求参数",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schema.OrdinaryQueryGridParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "插值的网格数据",
                        "schema": {
                            "$ref": "#/definitions/schema.OrdinaryGridInfo"
                        }
                    },
                    "400": {
                        "description": "{error:{code:0,message:无效的请求参数}}",
                        "schema": {
                            "$ref": "#/definitions/schema.ErrorResult"
                        }
                    },
                    "500": {
                        "description": "{error:{code:0,message:服务器错误}}",
                        "schema": {
                            "$ref": "#/definitions/schema.ErrorResult"
                        }
                    }
                }
            }
        },
        "/api/v1/ordinary/grid-png": {
            "post": {
                "produces": [
                    "image/png"
                ],
                "tags": [
                    "普通克力金"
                ],
                "summary": "查询插值生成图片",
                "parameters": [
                    {
                        "description": "请求参数",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schema.OrdinaryQueryGridPngParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "文件图片"
                    },
                    "400": {
                        "description": "{error:{code:0,message:无效的请求参数}}",
                        "schema": {
                            "$ref": "#/definitions/schema.ErrorResult"
                        }
                    },
                    "500": {
                        "description": "{error:{code:0,message:服务器错误}}",
                        "schema": {
                            "$ref": "#/definitions/schema.ErrorResult"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ordinary.GridMatrices": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    }
                },
                "width": {
                    "type": "number"
                },
                "xLim": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "yLim": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "zLim": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                }
            }
        },
        "schema.ErrorItem": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "错误码",
                    "type": "integer"
                },
                "message": {
                    "description": "错误信息",
                    "type": "string"
                }
            }
        },
        "schema.ErrorResult": {
            "type": "object",
            "properties": {
                "error": {
                    "description": "错误项",
                    "$ref": "#/definitions/schema.ErrorItem"
                }
            }
        },
        "schema.GridLevelColor": {
            "type": "object",
            "properties": {
                "rgba": {
                    "description": "RGBA颜色 [255, 255, 255, 255]",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "example": [
                        255,
                        128,
                        169,
                        255
                    ]
                },
                "value": {
                    "description": "值区间 [0, 15]",
                    "type": "array",
                    "items": {
                        "type": "number"
                    },
                    "example": [
                        0,
                        15
                    ]
                }
            }
        },
        "schema.OrdinaryGridInfo": {
            "type": "object",
            "properties": {
                "grid": {
                    "$ref": "#/definitions/ordinary.GridMatrices"
                },
                "timeCost": {
                    "description": "耗时",
                    "type": "string"
                }
            }
        },
        "schema.OrdinaryGridParam": {
            "type": "object",
            "required": [
                "polygon",
                "width"
            ],
            "properties": {
                "polygon": {
                    "description": "Polygon Geometry String",
                    "type": "string",
                    "example": "{\"type\": \"Polygon\",\"coordinates\": [[[103.614373, 27.00541],[104.174357, 26.635252],[104.356163, 28.018448],[103.614373, 27.00541]]]}"
                },
                "width": {
                    "description": "网格单元宽度",
                    "type": "number",
                    "example": 0.01
                }
            }
        },
        "schema.OrdinaryPlotPngParam": {
            "type": "object",
            "required": [
                "Ylim",
                "colors",
                "height",
                "width",
                "xlim"
            ],
            "properties": {
                "Ylim": {
                    "description": "Ylim",
                    "type": "array",
                    "items": {
                        "type": "number"
                    },
                    "example": [
                        26.635252,
                        28.018448
                    ]
                },
                "colors": {
                    "description": "colors",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schema.GridLevelColor"
                    }
                },
                "height": {
                    "description": "图片高度",
                    "type": "integer",
                    "example": 100
                },
                "width": {
                    "description": "图片宽度",
                    "type": "integer",
                    "example": 100
                },
                "xlim": {
                    "description": "Xlim",
                    "type": "array",
                    "items": {
                        "type": "number"
                    },
                    "example": [
                        103.614373,
                        104.356163
                    ]
                }
            }
        },
        "schema.OrdinaryQueryGridParam": {
            "type": "object",
            "properties": {
                "grid": {
                    "$ref": "#/definitions/schema.OrdinaryGridParam"
                },
                "train": {
                    "$ref": "#/definitions/schema.OrdinaryTrainParam"
                }
            }
        },
        "schema.OrdinaryQueryGridPngParam": {
            "type": "object",
            "properties": {
                "grid": {
                    "$ref": "#/definitions/schema.OrdinaryGridParam"
                },
                "plotPng": {
                    "$ref": "#/definitions/schema.OrdinaryPlotPngParam"
                },
                "train": {
                    "$ref": "#/definitions/schema.OrdinaryTrainParam"
                }
            }
        },
        "schema.OrdinaryTrainParam": {
            "type": "object",
            "required": [
                "lats",
                "lons",
                "model",
                "values"
            ],
            "properties": {
                "alpha": {
                    "description": "alpha",
                    "type": "number",
                    "default": 0,
                    "example": 100
                },
                "lats": {
                    "description": "纬度数组",
                    "type": "array",
                    "items": {
                        "type": "number"
                    },
                    "example": [
                        25.95,
                        25.81,
                        25.95
                    ]
                },
                "lons": {
                    "description": "经度数组",
                    "type": "array",
                    "items": {
                        "type": "number"
                    },
                    "example": [
                        102.68,
                        99.36,
                        101.23
                    ]
                },
                "model": {
                    "description": "函数模型(1:\"spherical\" 2:\"exponential\" 3:\"gaussian\")",
                    "type": "integer",
                    "example": 1
                },
                "sigma2": {
                    "description": "sigma2",
                    "type": "number",
                    "default": 0,
                    "example": 0
                },
                "values": {
                    "description": "权重值数组",
                    "type": "array",
                    "items": {
                        "type": "number"
                    },
                    "example": [
                        9.6,
                        10.2,
                        5.4
                    ]
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0.0",
	Host:        "",
	BasePath:    "/",
	Schemes:     []string{"http", "https"},
	Title:       "go-kriging-service",
	Description: "GIN + WIRE.",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
